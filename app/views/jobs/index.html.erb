<!-- Jobs - Dynamic 2 Column Layout -->
<div class="max-w-6xl mx-auto px-4 py-8">
  <!-- Page Header with Logo -->
  <%= render 'shared/page_header_with_logo', 
      title: t('navigation.jobs', default: 'Job Opportunities'),
      subtitle: t('jobs.subtitle', default: 'Discover career opportunities in your area') %>

  <!-- Action Buttons -->
  <% if user_signed_in? %>
    <div class="flex flex-col sm:flex-row gap-4 mb-8 justify-center">
      <%= link_to "ðŸ’¼ #{t('actions.post_job', default: 'Post a Job')}", new_job_path, 
                  class: "px-6 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-lg font-semibold" %>
    </div>
  <% end %>

  <!-- Dynamic Jobs Grid -->
  <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
    <% @jobs.each do |job| %>
      <div class="bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg p-4 shadow-sm hover:shadow-md transition-shadow cursor-pointer" onclick="openJobModal('job-<%= job.id %>')">
        <div class="flex gap-4">
          <div class="w-24 h-24 bg-blue-100 dark:bg-blue-900 rounded-lg flex items-center justify-center flex-shrink-0">
            <span class="text-3xl">ðŸ’¼</span>
          </div>
          <div class="flex-1">
            <div class="flex justify-between items-start mb-2">
              <span class="bg-blue-500 text-white px-2 py-1 rounded text-xs"><%= job.job_type.humanize %></span>
              <span class="text-sm text-gray-500 dark:text-gray-400"><%= time_ago_in_words(job.created_at) %> <%= t('common.ago', default: 'ago') %></span>
            </div>
            <h3 class="font-bold text-lg mb-1 text-gray-900 dark:text-gray-100"><%= job.translated_title(I18n.locale) %></h3>
            <p class="text-gray-600 dark:text-gray-400 text-sm mb-2"><%= truncate(job.translated_description(I18n.locale), length: 80) %></p>
            <div class="flex justify-between items-center">
              <span class="text-xs text-gray-500 dark:text-gray-400"><%= t('jobs.by', default: 'By') %> <%= job.business.name %></span>
              <div class="flex items-center gap-2">
                <span class="text-green-600 font-medium text-sm">
                  <%= number_to_currency(job.salary_min, unit: "$") %> - <%= number_to_currency(job.salary_max, unit: "$") %>
                </span>
              </div>
            </div>
          </div>
        </div>
      </div>
    <% end %>
    
    <% if @jobs.empty? %>
      <div class="col-span-2 text-center py-12">
        <p class="text-gray-500 dark:text-gray-400 text-lg"><%= t('jobs.no_jobs_found', default: 'No job postings found.') %></p>
        <% if user_signed_in? && current_user.businesses.any? %>
          <%= link_to new_job_path, class: "mt-4 inline-block px-6 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-lg font-semibold" do %>
            ðŸ’¼ <%= t('jobs.create_first', default: 'Post the first job') %>
          <% end %>
        <% end %>
      </div>
    <% end %>
  </div>
  
  <!-- Pagination -->
  <% if @jobs.respond_to?(:current_page) %>
    <div class="flex justify-center mt-8">
      <%= paginate @jobs %>
    </div>
  <% end %>
</div>

<!-- Job Detail Modal -->
<div id="job-modal" class="fixed inset-0 bg-black/80 backdrop-filter backdrop-blur-sm hidden z-50">
  <div class="flex items-center justify-center min-h-screen p-4">
    <div class="card-stunning max-w-4xl w-full animate-slide-up max-h-[90vh] overflow-y-auto">
      <div class="backdrop-filter backdrop-blur-sm px-6 py-4 border-b" style="background: linear-gradient(to right, color-mix(in srgb, var(--electric-blue) 10%, transparent), color-mix(in srgb, var(--vibrant-purple) 10%, transparent)); border-color: var(--glass-border-1);">
        <div class="flex justify-between items-start">
          <div id="modal-job-type" class="tag tag-primary"></div>
          <button onclick="closeJobModal()" class="text-2xl font-bold transition-colors" style="color: var(--text-secondary);" onmouseover="this.style.color='var(--text-primary)'" onmouseout="this.style.color='var(--text-secondary)'">Ã—</button>
        </div>
      </div>
      
      <div class="p-8">
        <!-- Job Header -->
        <div class="flex items-start mb-8">
          <div class="w-24 h-24 rounded-3xl flex items-center justify-center mr-6 shadow-2xl border-4" style="background: linear-gradient(to bottom right, var(--electric-blue), var(--vibrant-purple)); border-color: var(--glass-border-1);">
            <span class="text-white font-bold text-3xl">ðŸ’¼</span>
          </div>
          <div class="flex-1">
            <h2 id="modal-job-title" class="heading-1 mb-4"></h2>
            <div class="flex items-center mb-4">
              <span id="modal-job-business" class="text-text-secondary font-medium mr-4"></span>
              <span id="modal-job-experience" class="tag tag-secondary mr-4"></span>
              <span id="modal-job-remote" class="tag tag-success hidden"></span>
            </div>
            <div id="modal-job-salary" class="font-bold text-xl" style="color: var(--emerald-green);"></div>
          </div>
        </div>
        
        <!-- Job Description -->
        <div class="mb-8">
          <h3 class="heading-3 mb-4">
            <span class="translation missing: es.jobs.show.description">Description</span>
          </h3>
          <div id="modal-job-description" class="prose-elegant text-text-secondary"></div>
        </div>
        
        <!-- Requirements -->
        <div class="glass-surface p-6 rounded-2xl mb-8">
          <h3 class="heading-3 mb-4">
            <span class="translation missing: es.jobs.show.requirements">Requirements</span>
          </h3>
          <div id="modal-job-requirements" class="text-text-secondary">
            <!-- Requirements will be populated here -->
          </div>
        </div>
        
        <!-- Action Buttons -->
        <div class="flex gap-4 pt-6 border-t" style="border-color: var(--glass-border-1);">
          <button onclick="closeJobModal()" class="btn btn-primary-gradient flex-1">
            <%= t('actions.close', default: 'Close') %>
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
// Job modal functionality
let currentJobId = null;

// Job data from Rails
const jobsData = {
  <% @jobs.each_with_index do |job, index| %>
    'job-<%= job.id %>': {
      id: <%= job.id %>,
      title: '<%= j job.translated_title(I18n.locale) %>',
      jobType: '<%= j job.job_type.humanize %>',
      description: '<%= j job.translated_description(I18n.locale) %>',
      requirements: '<%= j job.translated_requirements(I18n.locale) %>',
      experienceLevel: '<%= j job.experience_level.humanize %>',
      salaryMin: <%= job.salary_min || 0 %>,
      salaryMax: <%= job.salary_max || 0 %>,
      remote: <%= job.remote? %>,
      businessName: '<%= j job.business.name %>',
      location: '<%= j job.location %>'
    }<%= ',' unless index == @jobs.count - 1 %>
  <% end %>
};

function openJobModal(jobId) {
  currentJobId = jobId;
  const data = jobsData[jobId];
  
  if (data) {
    // Update modal content
    document.getElementById('modal-job-type').textContent = data.jobType;
    document.getElementById('modal-job-title').textContent = data.title;
    document.getElementById('modal-job-business').textContent = `<%= t('jobs.by', default: 'By') %> ${data.businessName}`;
    document.getElementById('modal-job-experience').textContent = data.experienceLevel;
    document.getElementById('modal-job-description').textContent = data.description;
    
    // Update salary
    if (data.salaryMin > 0 && data.salaryMax > 0) {
      document.getElementById('modal-job-salary').textContent = 
        `$${data.salaryMin.toLocaleString()} - $${data.salaryMax.toLocaleString()}`;
    } else {
      document.getElementById('modal-job-salary').textContent = '<%= t('jobs.show.salary_negotiable', default: 'Salary negotiable') %>';
    }
    
    // Update requirements
    const requirementsElement = document.getElementById('modal-job-requirements');
    if (data.requirements && data.requirements.trim() !== '') {
      requirementsElement.innerHTML = `<p>${data.requirements}</p>`;
    } else {
      requirementsElement.innerHTML = '<p><%= t('jobs.show.no_specific_requirements', default: 'No specific requirements listed.') %></p>';
    }
    
    // Show/hide remote badge
    const remoteBadge = document.getElementById('modal-job-remote');
    if (data.remote) {
      remoteBadge.textContent = '<%= t('jobs.show.remote_ok', default: 'Remote OK') %>';
      remoteBadge.classList.remove('hidden');
    } else {
      remoteBadge.classList.add('hidden');
    }
    
    // Show modal
    document.getElementById('job-modal').classList.remove('hidden');
  }
}

function closeJobModal() {
  document.getElementById('job-modal').classList.add('hidden');
  currentJobId = null;
}


// Close modal when clicking outside
document.getElementById('job-modal').addEventListener('click', function(e) {
  if (e.target === document.getElementById('job-modal')) {
    closeJobModal();
  }
});

// Close modal with escape key
document.addEventListener('keydown', function(e) {
  if (e.key === 'Escape' && currentJobId) {
    closeJobModal();
  }
});
</script>